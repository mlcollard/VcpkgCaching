name: CI

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest # or ubuntu-latest, macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          git checkout e140b1fde236eb682b0d47f905e65008a191800f

      - name: Create release-only triplet
        run: |
          echo "set(VCPKG_TARGET_ARCHITECTURE x64)" > ${{ github.workspace }}/vcpkg/triplets/community/x64-windows-release.cmake
          echo "set(VCPKG_CRT_LINKAGE dynamic)" >> ${{ github.workspace }}/vcpkg/triplets/community/x64-windows-release.cmake
          echo "set(VCPKG_LIBRARY_LINKAGE dynamic)" >> ${{ github.workspace }}/vcpkg/triplets/community/x64-windows-release.cmake
          echo "set(VCPKG_BUILD_TYPE release)" >> ${{ github.workspace }}/vcpkg/triplets/community/x64-windows-release.cmake

      - name: Cache vcpkg installed packages
        uses: actions/cache@v4
        with:
          path: vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}

      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat

      - name: Install dependencies in custom directory for cache purposes
        run: .\vcpkg\vcpkg.exe install --triplet x64-windows-release --x-install-root=${{ github.workspace }}\vcpkg_installed

      - name: Configure CMake with release-only triplet and vcpkg
        run: cmake -B build -S . -DVCPKG_TARGET_TRIPLET=x64-windows-release -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build --config Release
